[Unit]
Description=Soundboard Service
After=pipewire.service
Requires=pipewire.service

[Service]
Type=oneshot
ExecStart=/bin/bash -c '\
while ! systemctl is-active --user --quiet pipewire.service; do \
    sleep 1; \
done; \
SOUNDBOARD_SINK=SoundboardInput; \
SOUNDBOARD_SOURCE=SoundboardOutput; \
SOUNDBOARD_MIC=$(pactl get-default-source); \
if [[ $SOUNDBOARD_MIC != $SOUNDBOARD_SOURCE ]]; then \
    pactl unload-module module-null-sink 2> /dev/null; \
    pactl load-module module-null-sink media.class=Audio/Sink sink_name=$SOUNDBOARD_SINK device.description=$SOUNDBOARD_SINK channel_map=stereo >> /dev/null; \
    pactl load-module module-null-sink media.class=Audio/Source/Virtual sink_name=$SOUNDBOARD_SOURCE device.description=$SOUNDBOARD_SOURCE channel_map=front-left,front-right >> /dev/null; \
    pw-link $SOUNDBOARD_MIC:capture_FL  $SOUNDBOARD_SINK:playback_FL 2> /dev/null; \
    pw-link $SOUNDBOARD_MIC:capture_FR  $SOUNDBOARD_SINK:playback_FR 2> /dev/null; \
    pw-link $SOUNDBOARD_MIC:capture_MONO  $SOUNDBOARD_SINK:playback_FL 2> /dev/null; \
    pw-link $SOUNDBOARD_MIC:capture_MONO  $SOUNDBOARD_SINK:playback_FR 2> /dev/null; \
    pw-link $SOUNDBOARD_SINK:monitor_FL $SOUNDBOARD_SOURCE:input_FL 2> /dev/null; \
    pw-link $SOUNDBOARD_SINK:monitor_FR $SOUNDBOARD_SOURCE:input_FR 2> /dev/null; \
    pactl set-default-source $SOUNDBOARD_SOURCE; \
fi'
ExecStop=/bin/bash -c '\
pactl unload-module module-null-sink 2> /dev/null; \
pw-link -d $SOUNDBOARD_MIC:capture_FL  $SOUNDBOARD_SINK:playback_FL 2> /dev/null; \
pw-link -d $SOUNDBOARD_MIC:capture_FR  $SOUNDBOARD_SINK:playback_FR 2> /dev/null; \
pw-link -d $SOUNDBOARD_MIC:capture_MONO  $SOUNDBOARD_SINK:playback_FL 2> /dev/null; \
pw-link -d $SOUNDBOARD_MIC:capture_MONO  $SOUNDBOARD_SINK:playback_FR 2> /dev/null; \
pw-link -d $SOUNDBOARD_SINK:monitor_FL $SOUNDBOARD_SOURCE:input_FL 2> /dev/null; \
pw-link -d $SOUNDBOARD_SINK:monitor_FR $SOUNDBOARD_SOURCE:input_FR 2> /dev/null'
RemainAfterExit=yes

[Install]
WantedBy=default.target
